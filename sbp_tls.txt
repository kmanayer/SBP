(herald "Session Binding Protocol (SBP)")

(comment "CPSA 3.6.6")
(comment "All input read from sbp_tls.lsp")

(defprotocol sbp basic
  (defrole client
    (vars (cc id s cred answer data) (enc_cookie mesg) (c p name))
    (trace (send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    (uniq-gen cc s))
  (defrole proxy
    (vars (cc id s cred cookie answer sskey data) (request mesg)
      (c p name))
    (trace (recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    (non-orig sskey)
    (uniq-gen id)))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cc-0 id-0 s-0 cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc-0) (id id-0) (s s-0)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc s id-0)
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc-0) (send (cat id-0 (pubk p))) (recv (enc s-0 (pubk p)))
      (send (enc id-0 (hash s-0 cc-0 id-0)))
      (recv (enc cc-0 (hash s-0 cc-0 id-0)))
      (recv (enc (enc "login:" cred (privk c)) (hash s-0 cc-0 id-0)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (recv
        (enc request (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (send
        (enc (enc "answer:" answer (privk p)) (hash s-0 cc-0 id-0)))))
  (label 0)
  (unrealized (0 3) (0 6) (0 9) (1 5))
  (preskeleton)
  (origs)
  (comment "Not a skeleton"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cc-0 id-0 s-0 cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc-0) (id id-0) (s s-0)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 5) (1 5)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc s id-0)
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc-0) (send (cat id-0 (pubk p))) (recv (enc s-0 (pubk p)))
      (send (enc id-0 (hash s-0 cc-0 id-0)))
      (recv (enc cc-0 (hash s-0 cc-0 id-0)))
      (recv (enc (enc "login:" cred (privk c)) (hash s-0 cc-0 id-0)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (recv
        (enc request (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (send
        (enc (enc "answer:" answer (privk p)) (hash s-0 cc-0 id-0)))))
  (label 1)
  (parent 0)
  (unrealized (0 3) (0 6) (0 9) (1 5))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 5) (1 5)) ((1 1) (0 1))
    ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (contracted (cc-0 cc) (id-0 id) (s-0 s))
    (enc "login:" cred (privk c)) (1 5)
    (enc (enc "login:" cred (privk c)) (hash s cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 2)
  (parent 1)
  (unrealized (0 3) (0 6) (1 4) (1 7))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cc-0 id-0 s-0 cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc-0) (id id-0) (s s-0)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 2) (2 0)) ((0 5) (1 5)) ((1 8) (0 9)) ((2 1) (1 5)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc s id-0)
  (operation encryption-test (added-listener (hash s cc id))
    (enc "login:" cred (privk c)) (1 5)
    (enc (enc "login:" cred (privk c)) (hash s cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc-0) (send (cat id-0 (pubk p))) (recv (enc s-0 (pubk p)))
      (send (enc id-0 (hash s-0 cc-0 id-0)))
      (recv (enc cc-0 (hash s-0 cc-0 id-0)))
      (recv (enc (enc "login:" cred (privk c)) (hash s-0 cc-0 id-0)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (recv
        (enc request (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (send
        (enc (enc "answer:" answer (privk p)) (hash s-0 cc-0 id-0))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 3)
  (parent 1)
  (unrealized (0 3) (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 0 client 5)
    (enc cc (hash s cc id)) (1 4))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 4)
  (parent 2)
  (unrealized (0 3) (0 6) (1 7))
  (origs)
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (1 4)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc cc (hash s cc id)) (1 4))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 5)
  (parent 2)
  (unrealized (0 3) (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cc-0 id-0 s-0 cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc-0) (id id-0) (s s-0)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 2) (3 0)) ((0 5) (1 5)) ((1 8) (0 9)) ((2 1) (1 5))
    ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc s id-0)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc-0) (send (cat id-0 (pubk p))) (recv (enc s-0 (pubk p)))
      (send (enc id-0 (hash s-0 cc-0 id-0)))
      (recv (enc cc-0 (hash s-0 cc-0 id-0)))
      (recv (enc (enc "login:" cred (privk c)) (hash s-0 cc-0 id-0)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (recv
        (enc request (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (send
        (enc (enc "answer:" answer (privk p)) (hash s-0 cc-0 id-0))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 6)
  (parent 3)
  (unrealized (0 3) (0 6) (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (1 7)) ((1 1) (0 1)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 0 client 9)
    (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (1 7))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 7)
  (parent 4)
  (unrealized (0 3) (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (1 7)) ((1 1) (0 1)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 0 client 8)
    (enc "malicious request" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (1 7))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 8)
  (parent 4)
  (unrealized (0 3) (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 7)
    (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (1 7))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 9)
  (parent 4)
  (unrealized (0 3) (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (1 7)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc request (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (1 7))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 10)
  (parent 4)
  (unrealized (0 3) (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (1 4)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 11)
  (parent 5)
  (unrealized (0 3) (0 6) (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 4)
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 12)
  (parent 7)
  (unrealized (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 8) (0 9))
    ((2 1) (0 3)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 13)
  (parent 7)
  (unrealized (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 4)
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 14)
  (parent 8)
  (unrealized (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 8) (0 9))
    ((2 1) (0 3)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 15)
  (parent 8)
  (unrealized (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 4)
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 16)
  (parent 9)
  (unrealized (0 6))
  (origs)
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (0 3)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc id (hash s cc id)) (0 3))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 17)
  (parent 9)
  (unrealized (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg)
    (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s s) (cred cred)
    (cookie cookie) (answer answer) (sskey sskey) (c c) (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (1 7))
    ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 18)
  (parent 10)
  (unrealized (0 3) (0 6) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (0 6))
    ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 7)
    (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 19)
  (parent 12)
  (unrealized)
  (shape)
  (maps
    ((0 1)
      ((cred cred) (answer answer) (c c) (p p) (cc cc) (id id) (s s)
        (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc-0 cc)
        (id-0 id) (s-0 s) (cookie cookie) (sskey sskey)
        (request "actual request"))))
  (origs))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 8) (0 9)) ((2 1) (0 6)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 20)
  (parent 12)
  (unrealized (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 8) (0 9))
    ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 21)
  (parent 13)
  (unrealized (0 6) (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (0 6))
    ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 7)
    (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 22)
  (parent 14)
  (unrealized)
  (shape)
  (maps
    ((0 1)
      ((cred cred) (answer answer) (c c) (p p) (cc cc) (id id) (s s)
        (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc-0 cc)
        (id-0 id) (s-0 s) (cookie cookie) (sskey sskey)
        (request "malicious request"))))
  (origs))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 8) (0 9)) ((2 1) (0 6)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
      (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 23)
  (parent 14)
  (unrealized (0 6) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 8) (0 9))
    ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 24)
  (parent 15)
  (unrealized (0 6) (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (0 6)) ((1 8) (0 9)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (displaced 2 1 proxy 7)
    (enc "login-successful" (enc cookie-0 (hash sskey-0 (hash s cc id)))
      (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 25)
  (parent 16)
  (unrealized)
  (shape)
  (maps
    ((0 1)
      ((cred cred) (answer answer) (c c) (p p) (cc cc) (id id) (s s)
        (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc-0 cc)
        (id-0 id) (s-0 s) (cookie cookie) (sskey sskey)
        (request "login-successful"))))
  (origs))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (2 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 8) (0 9))
    ((2 1) (0 6)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (hash s cc id))
    (enc "login-successful" enc_cookie (hash s cc id)) (0 6))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id))))
  (label 26)
  (parent 16)
  (unrealized (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 8) (0 9)) ((2 1) (0 3))
    ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 27)
  (parent 17)
  (unrealized (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton sbp
  (vars (enc_cookie request mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 6) (3 0)) ((1 8) (0 9)) ((2 1) (1 7))
    ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 1 proxy 7) s (3 0)
    (enc s (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 28)
  (parent 18)
  (unrealized (0 3) (0 6) (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 29)
  (parent 20)
  (unrealized (0 6) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id s cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash s cc id)))) (cc cc)
    (id id) (s s) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send
        (enc "actual request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash s cc id))) (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 30)
  (parent 23)
  (unrealized (0 6) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id s cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id) (s s)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash s cc id))
  (deflistener (cat s cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (3 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 8) (0 9))
    ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id s)
  (operation encryption-test (added-listener (cat s cc id))
    (hash s cc id) (2 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc s (pubk p)))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "malicious request" enc_cookie (hash s cc id)))
      (send (enc "actual request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv (hash s cc id)) (send (hash s cc id)))
    ((recv (cat s cc id)) (send (cat s cc id))))
  (label 31)
  (parent 26)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (3 0)) ((1 1) (0 1)) ((1 6) (3 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 0 client 8) cookie (3 0)
    (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 32)
  (parent 28)
  (unrealized (0 3) (0 6) (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 6) (3 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 33)
  (parent 28)
  (unrealized (0 3) (0 6) (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 1 proxy 7) s (3 0)
    (enc s (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 34)
  (parent 29)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 1 proxy 7) s (3 0)
    (enc s (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 35)
  (parent 30)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (3 0)) ((1 8) (0 9))
    ((2 1) (0 6)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 1 proxy 7) s (3 0)
    (enc s (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 36)
  (parent 31)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (3 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 4 0 client 9) cookie (3 0)
    (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id))) (hash cookie cc id))
    (enc "malicious request"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 37)
  (parent 32)
  (unrealized (0 3) (0 6) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (3 0)) ((1 1) (0 1)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id))) (hash cookie cc id))
    (enc "malicious request"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 38)
  (parent 32)
  (unrealized (0 3) (0 6) (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie request mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 6) (3 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 39)
  (parent 33)
  (seen 28)
  (unrealized (0 3) (0 6) (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 6) (3 0)) ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 40)
  (parent 34)
  (unrealized (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 6) (3 0)) ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 41)
  (parent 35)
  (unrealized (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 42)
  (parent 36)
  (unrealized (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (3 0) (enc cookie (pubk p))
    (enc "actual request" (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id))) (hash cookie cc id))
    (enc "malicious request"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 43)
  (parent 37)
  (unrealized (0 3) (0 6) (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (3 0)) ((1 1) (0 1)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 44)
  (parent 38)
  (unrealized (0 3) (0 6) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "actual request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 6) (3 0)) ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 45)
  (parent 40)
  (seen 34)
  (unrealized (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "malicious request") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 7) (1 7)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 6) (3 0)) ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 46)
  (parent 41)
  (seen 35)
  (unrealized (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg) (cred answer cc id cookie sskey data)
    (c p name))
  (defstrand client 10 (enc_cookie enc_cookie) (cc cc) (id id)
    (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request "login-successful") (cc cc) (id id)
    (s cookie) (cred cred) (cookie cookie) (answer answer) (sskey sskey)
    (c c) (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((1 1) (0 1)) ((1 3) (0 3)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (0 6)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv (enc "login-successful" enc_cookie (hash cookie cc id)))
      (send (enc "malicious request" enc_cookie (hash cookie cc id)))
      (send (enc "actual request" enc_cookie (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 47)
  (parent 42)
  (seen 36)
  (unrealized (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (3 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (4 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 48)
  (parent 43)
  (unrealized (0 3) (0 6) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (3 0)) ((1 1) (0 1)) ((1 6) (5 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 6 1 proxy 7) cookie (5 0)
    (enc cookie (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 49)
  (parent 44)
  (seen 32)
  (unrealized (0 3) (0 6) (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (5 0)) ((1 8) (0 9))
    ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 6 1 proxy 7) cookie (5 0)
    (enc cookie (pubk p)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 50)
  (parent 48)
  (unrealized (0 3) (0 6) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 5) (1 5))
    ((0 7) (5 0)) ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (5 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (displaced 6 0 client 8) cookie (5 0)
    (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 51)
  (parent 50)
  (seen 37)
  (unrealized (0 3) (0 6) (5 0))
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (6 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (5 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation nonce-test (added-listener (hash cookie cc id)) cookie
    (5 0) (enc cookie (pubk p))
    (enc "login-successful"
      (enc cookie (hash sskey (hash cookie cc id)))
      (hash cookie cc id)))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id))))
  (label 52)
  (parent 50)
  (unrealized (0 3) (0 6) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (request mesg) (cred answer cc id cookie sskey data) (c p name))
  (defstrand client 10
    (enc_cookie (enc cookie (hash sskey (hash cookie cc id)))) (cc cc)
    (id id) (s cookie) (cred cred) (answer answer) (c c) (p p))
  (defstrand proxy 9 (request request) (cc cc) (id id) (s cookie)
    (cred cred) (cookie cookie) (answer answer) (sskey sskey) (c c)
    (p p))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (deflistener (hash cookie cc id))
  (deflistener (cat cookie cc id))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (7 0)) ((0 4) (1 4))
    ((0 5) (1 5)) ((0 8) (3 0)) ((1 1) (0 1)) ((1 6) (5 0))
    ((1 8) (0 9)) ((2 1) (1 7)) ((3 1) (2 0)) ((4 1) (3 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (6 0)))
  (non-orig sskey (privk c) (privk p))
  (uniq-gen cred answer cc id cookie)
  (operation encryption-test (added-listener (cat cookie cc id))
    (hash cookie cc id) (6 0))
  (traces
    ((send cc) (recv (cat id (pubk p))) (send (enc cookie (pubk p)))
      (recv (enc id (hash cookie cc id)))
      (send (enc cc (hash cookie cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (recv
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "malicious request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send
        (enc "actual request"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv cc) (send (cat id (pubk p))) (recv (enc cookie (pubk p)))
      (send (enc id (hash cookie cc id)))
      (recv (enc cc (hash cookie cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash cookie cc id)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (recv
        (enc request (enc cookie (hash sskey (hash cookie cc id)))
          (hash cookie cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash cookie cc id))))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id)))
    ((recv (hash cookie cc id)) (send (hash cookie cc id)))
    ((recv (cat cookie cc id)) (send (cat cookie cc id))))
  (label 53)
  (parent 52)
  (seen 50)
  (unrealized (0 3) (0 6) (7 0))
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")
