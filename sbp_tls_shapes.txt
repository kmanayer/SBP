(comment "CPSA 3.6.6")
(comment "Extracted shapes")

(herald "Session Binding Protocol (SBP)")

(comment "CPSA 3.6.6")

(comment "All input read from sbp_tls.lsp")

(defprotocol sbp basic
  (defrole client
    (vars (cc id s cred answer data) (enc_cookie mesg) (pk akey)
      (c p name))
    (trace (send cc) (recv (cat id pk)) (send (enc s pk))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    (uniq-gen cc s))
  (defrole proxy
    (vars (cc id s cred cookie answer sskey data) (c p name))
    (trace (recv cc) (send (cat id (pubk p))) (recv (enc s (pubk p)))
      (send (enc id (hash s cc id))) (recv (enc cc (hash s cc id)))
      (recv (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (send
        (enc "login-successful" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (recv
        (enc "request" (enc cookie (hash sskey (hash s cc id)))
          (hash s cc id)))
      (send (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    (uniq-gen id)))

(defskeleton sbp
  (vars (enc_cookie mesg) (cc id s cred answer data) (c p name)
    (pk akey))
  (defstrand client 9 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p) (pk pk))
  (non-orig (privk c) (privk p))
  (uniq-gen cc s)
  (traces
    ((send cc) (recv (cat id pk)) (send (enc s pk))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id)))))
  (label 0)
  (unrealized (0 8))
  (origs)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton sbp
  (vars (enc_cookie mesg)
    (cc id s cred answer cc-0 id-0 s-0 cred-0 cookie sskey data)
    (c p c-0 name) (pk akey))
  (defstrand client 9 (enc_cookie enc_cookie) (cc cc) (id id) (s s)
    (cred cred) (answer answer) (c c) (p p) (pk pk))
  (defstrand proxy 9 (cc cc-0) (id id-0) (s s-0) (cred cred-0)
    (cookie cookie) (answer answer) (sskey sskey) (c c-0) (p p))
  (precedes ((1 8) (0 8)))
  (non-orig (privk c) (privk p))
  (uniq-gen cc s id-0)
  (operation encryption-test (added-strand proxy 9)
    (enc "answer:" answer (privk p)) (0 8))
  (traces
    ((send cc) (recv (cat id pk)) (send (enc s pk))
      (recv (enc id (hash s cc id))) (send (enc cc (hash s cc id)))
      (send (enc (enc "login:" cred (privk c)) (hash s cc id)))
      (recv (enc "login-successful" enc_cookie (hash s cc id)))
      (send (enc "request" enc_cookie (hash s cc id)))
      (recv (enc (enc "answer:" answer (privk p)) (hash s cc id))))
    ((recv cc-0) (send (cat id-0 (pubk p))) (recv (enc s-0 (pubk p)))
      (send (enc id-0 (hash s-0 cc-0 id-0)))
      (recv (enc cc-0 (hash s-0 cc-0 id-0)))
      (recv
        (enc (enc "login:" cred-0 (privk c-0)) (hash s-0 cc-0 id-0)))
      (send
        (enc "login-successful"
          (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (recv
        (enc "request" (enc cookie (hash sskey (hash s-0 cc-0 id-0)))
          (hash s-0 cc-0 id-0)))
      (send
        (enc (enc "answer:" answer (privk p)) (hash s-0 cc-0 id-0)))))
  (label 1)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (p p) (cc cc) (id id) (s s) (cred cred) (answer answer)
        (enc_cookie enc_cookie) (pk pk))))
  (origs))

(comment "Nothing left to do")
